#O Docker compose é uma ferramenta que permite criar e gerenciar os containers de forma rápida e eficiente.
#Ele servirá para orquestrar os conatainers e permitir a comunicação entre eles.

version: '3.8'
services:
  # Container do Airflow
  airflow:
    inmage: apache/airflow:2.5.1
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE_LOAD_EXAMPLES=False
      - AIRFLOW__CORE_FERNET_KEY=$(python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())")
    volumes:
      - ./dags:/opt/airflow/dags
      - ./airflow:/opt/airflow/logs
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    # Container Spark Master
  spark-master:
    image: bitnami/spark:3
    environment:
      - SPARK_MODE=master
    ports:
      - "8081:8080"
      - "7077:7077"

  # Container Spark Worker
  spark-worker:
    image: bitnami/spark:3
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8082:8080"

  # Container para executar jobs PySpark
  pyspark-job:
    build: ./spark
    depends_on:
      - spark-master
      - spark-worker
    volumes:
      - ./scripts:/app/scripts
      - ./data:/app/data
    command: [ "tail", "-f", "/dev/null" ]
